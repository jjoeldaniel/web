---
interface Props {
  title: string;
  text: string;
}

const { title = "Card Title", text = "Default text to copy" } = Astro.props;
---

<div
  class="btn btn-xl m-auto grid place-content-center transition delay-150 duration-300 ease-in-out hover:-translate-y-1"
>
  <h3 class="text-lg text-center">
    <button id="copy-button">{title}</button>
  </h3>
</div>

<div
  id="copy-notification"
  class="fixed bottom-5 right-5 p-3 btn btn-lg btn-success opacity-0 transition-opacity duration-300"
>
  Text copied!
</div>

<script is:inline define:vars={{ text }}>
  async function writeClipboardText() {
    try {
      await navigator.clipboard.writeText(text);
      const notification = document.getElementById("copy-notification");
      if (notification) {
        notification.classList.remove("opacity-0");
        setTimeout(() => notification.classList.add("opacity-0"), 2000);
      }
    } catch (error) {
      console.error(error.message);
    }
  }

  document
    .getElementById("copy-button")
    .addEventListener("click", () => writeClipboardText());
</script>
